name: CI/CD and Docker Builds

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md
      - "*.md"

jobs:
  python_dataops_build:
    runs-on: ubuntu-latest
    needs: docker_spark
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      # - name: Install dependencies (apt-get)
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libsasl2-dev
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.local-dev.txt
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Smart build and push (slalom/dataops)
        uses: ./.github/actions/docker-smart-build
        env:
          IMAGE_NAME: slalomggp/dataops
        with:
          dockerfilePath: ./Dockerfile
          tagAs: $IMAGE_NAME:latest-dev,$IMAGE_NAME:commit-${{ github.sha }}
          dockerUser: ${{ secrets.DOCKER_USER }}
          dockerPass: ${{ secrets.DOCKER_SECRET }}

  ci_builder_update:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Smart build and push (slalom/ci-builder)
        uses: ./.github/actions/docker-smart-build
        env:
          IMAGE_NAME: slalomggp/ci-builder
        with:
          dockerfilePath: containers/ci-builder/Dockerfile
          tagAs: $IMAGE_NAME:latest-dev,$IMAGE_NAME:commit-${{ github.sha }}
          dockerUser: ${{ secrets.DOCKER_USER }}
          dockerPass: ${{ secrets.DOCKER_SECRET }}

  docker_spark:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Smart build and push (slalom/spark)
        uses: ./.github/actions/docker-smart-build
        env:
          IMAGE_NAME: slalomggp/spark
        with:
          dockerfilePath: containers/docker-dataops/spark.Dockerfile
          tagAs: $IMAGE_NAME:latest-dev,$IMAGE_NAME:commit-${{ github.sha }}
          dockerUser: ${{ secrets.DOCKER_USER }}
          dockerPass: ${{ secrets.DOCKER_SECRET }}

  docker_dbt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Smart build and push (slalom/dbt)
        uses: ./.github/actions/docker-smart-build
        env:
          IMAGE_NAME: slalomggp/dbt
        with:
          dockerfilePath: containers/docker-dataops/dbt.Dockerfile
          tagAs: $IMAGE_NAME:latest-dev,$IMAGE_NAME:commit-${{ github.sha }}
          dockerUser: ${{ secrets.DOCKER_USER }}
          dockerPass: ${{ secrets.DOCKER_SECRET }}
