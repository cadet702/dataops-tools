name: CI tests for dataops-quickstart

on:
  push:
    paths-ignore:
      - docs/**.md
      - "*.md"

jobs:
  python_dataops_build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      # - name: Install dependencies (apt-get)
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libsasl2-dev
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.local-dev.txt
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  ci_builder_update:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Smart build and push (ci-builder)
        env:
          GIT_COMMIT: ${{ github.sha }}
          DOCKER_REPO: slalomggp/ci-builder
          DOCKERFILE_PATH: containers/ci-builder/Dockerfile
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils smart_build
          --dockerfile_path=$DOCKERFILE_PATH
          --tag_as=$DOCKER_REPO:latest-dev,$DOCKER_REPO:commit-$GIT_COMMIT
          --push_final=1
          --push_core=1

  docker_spark:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Smart build and push (spark)
        env:
          GIT_COMMIT: ${{ github.sha }}
          DOCKER_REPO: slalomggp/spark-ds
          DOCKERFILE_PATH: containers/docker-dataops/spark.Dockerfile
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils smart_build
          --dockerfile_path=$DOCKERFILE_PATH
          --tag_as=$DOCKER_REPO:latest-dev,$DOCKER_REPO:commit-$GIT_COMMIT
          --push_final=1
          --push_core=1

  docker_dbt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Smart build and push (dbt)
        env:
          GIT_COMMIT: ${{ github.sha }}
          DOCKER_REPO: slalomggp/dbt
          DOCKERFILE_PATH: containers/docker-dataops/dbt.Dockerfile
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils smart_build
          --dockerfile_path=$DOCKERFILE_PATH
          --tag_as=$DOCKER_REPO:latest-dev,$DOCKER_REPO:commit-$GIT_COMMIT
          --push_final=1
          --push_core=1

  docker_meltano:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Smart build and push (meltano)
        env:
          GIT_COMMIT: ${{ github.sha }}
          DOCKER_REPO: slalomggp/meltano
          DOCKERFILE_PATH: containers/docker-dataops/meltano.Dockerfile
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils smart_build
          --dockerfile_path=$DOCKERFILE_PATH
          --tag_as=$DOCKER_REPO:latest-dev,$DOCKER_REPO:commit-$GIT_COMMIT
          --push_final=1
          --push_core=1
