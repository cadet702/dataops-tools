name: Publish to PyPi and Dockerhub

# temporary for testing
on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md
      - "*.md"

# on:
#   release:
#     types: [published]

jobs:
  pypi_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Push to PyPi (https://pypi.org/project/slalom.dataops/)
        env:
          VERSION: ${{ github.ref }}
          PYPI_USER: ${{ secrets.PYPI_USER }}
          PYPI_PASS: ${{ secrets.PYPI_SECRET }}
        run: |
          echo -e "Installing twine...\n\n"
          pip install twine
          echo -e "\nCreating setup package...\n\n"
          python setup.py sdist
          echo -e "\nPublishing to version ref '$VERSION'...\n\n"
          twine upload -u $PYPI_USER -p $PYPI_PASS dist/*
      - name: Test install (pip install slalom.dataops)
        run: |
          pip install slalom.dataops
      - name: Test uninstall (pip uninstall slalom.dataops)
        run: |
          pip uninstall -y slalom.dataops
      - name: Test full install (pip install w/ extras)
        run: |
          pip install slalom.dataops[Azure,AWS,Docker,Pandas,Spark]

  docker_dataops_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Re-tag and push (slalom/dataops)
        env:
          DOCKER_REPO: slalomggp/dataops
          DOCKERFILE_PATH: containers/dataops/Dockerfile
          GIT_COMMIT: ${{ github.sha }}
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils remote_retag
          --image_name=$DOCKER_REPO
          --existing_tag=commit-$GIT_COMMIT
          --tag_as=$DOCKER_REPO:latest
  docker_ci_builder_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Re-tag and push (slalom/ci-builder)
        env:
          DOCKER_REPO: slalomggp/ci-builder
          DOCKERFILE_PATH: containers/ci-builder/Dockerfile
          GIT_COMMIT: ${{ github.sha }}
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils remote_retag
          --image_name=$DOCKER_REPO
          --existing_tag=commit-$GIT_COMMIT
          --tag_as=$DOCKER_REPO:latest
  docker_spark_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Re-tag and push (slalom/spark)
        env:
          DOCKER_REPO: slalomggp/spark
          DOCKERFILE_PATH: containers/docker-dataops/spark.Dockerfile
          GIT_COMMIT: ${{ github.sha }}
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils remote_retag
          --image_name=$DOCKER_REPO
          --existing_tag=commit-$GIT_COMMIT
          --tag_as=$DOCKER_REPO:latest
  docker_dbt_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (3.7)
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies (python pip)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.host-machine.txt
      - name: Re-tag and push (slalom/dbt)
        env:
          DOCKER_REPO: slalomggp/dbt
          DOCKERFILE_PATH: containers/docker-dataops/dbt.Dockerfile
          GIT_COMMIT: ${{ github.sha }}
          USER: ${{ secrets.DOCKER_USER }}
          PASS: ${{ secrets.DOCKER_SECRET }}
        run: >
          docker login -u $USER -p $PASS &&
          python -m slalom.dataops.dockerutils remote_retag
          --image_name=$DOCKER_REPO
          --existing_tag=commit-$GIT_COMMIT
          --tag_as=$DOCKER_REPO:latest
