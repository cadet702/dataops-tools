name: Docker Retag
description: Smartly retags an existing docker image
runs:
  using: "docker"
  image: "docker://slalomggp/dataops:latest-dev"
  args:
    - dockerutils
    - remote_retag
    - --image_name=${{ inputs.imageName }}
    - --existing_tag=${{ inputs.existingTag }}
    - --tag_as=${{ inputs.tagAs }}
    - --with_login=True
  env:
    DOCKER_USERNAME: "{{ inputs.dockerUser }}"
    DOCKER_PASSWORD: "{{ inputs.dockerPassword }}"
    DOCKER_REGISTRY: "{{ inputs.dockerRegistry }}"
inputs:
  imageName:
    description: "The name of the image (without tags)"
    required: true
  existingTag:
    description: "The name of the tag that already exists"
    required: true
  tagAs:
    description: "The name of the new tag (or a comma-separated list of tags)"
    required: true
  dockerUser:
    description: "Docker user for login"
    required: false
    default: ""
  dockerPassword:
    description: "Docker password for login"
    required: false
    default: ""
  dockerRegistry:
    description: "Docker registry for login (optional)"
    required: false
    default: "index.docker.io"
branding:
  icon: anchor
  color: blue
